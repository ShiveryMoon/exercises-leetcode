class Solution:
    def uniquePathsWithObstacles(self, obstacleGrid):
        """
        :type obstacleGrid: List[List[int]]
        :rtype: int
        """
        if obstacleGrid[0][0]==1 or obstacleGrid[-1][-1]==1:
            return 0
        m,n=len(obstacleGrid),len(obstacleGrid[0])
        memo=[[0 for x in range(n)] for y in range(m)]
        memo[-1][-1]=1
        for i in range(m-1,-1,-1):
            for j in range(n-1,-1,-1):
                if i==m-1 and j==n-1:
                    continue
                if obstacleGrid[i][j]==1:
                    memo[i][j]=0
                elif i==m-1:
                    memo[i][j]=memo[i][j+1]
                elif j==n-1:
                    memo[i][j]=memo[i+1][j]
                else:
                    memo[i][j]=memo[i+1][j]+memo[i][j+1]
        return memo[0][0]