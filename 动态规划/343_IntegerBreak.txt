记忆化搜索：
class Solution:
    def integerBreak(self, n):
        """
        :type n: int
        :rtype: int
        """
        memo=[0]*(n+1)
        self.memoSearch(n,memo)
        return memo[n]
    
    def memoSearch(self,n,memo):
        if n==1:
            return 1
        if memo[n]==0:
            for i in range(1,n):
                memo[n]=max(memo[n],max(i*(n-i),i*self.memoSearch(n-i,memo)))
        return memo[n]

动态规划：
class Solution:
    def integerBreak(self, n):
        """
        :type n: int
        :rtype: int
        """
        memo=[0]*(n+1)
        memo[1]=1
        for i in range(2,n+1):
            for j in range(1,i):
                memo[i]=max(memo[i],max(j*(i-j),j*memo[i-j]))
        return memo[n]