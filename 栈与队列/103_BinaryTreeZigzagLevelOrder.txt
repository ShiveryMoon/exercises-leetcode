class Solution(object):
    def zigzagLevelOrder(self, root):
        """
        :type root: TreeNode
        :rtype: List[List[int]]
        """
        if root is None:
            return []
        rl=[]
        queue=[]
        queue.insert(0,(root,0))
        while len(queue):
            cur=queue.pop()
            if len(rl)==cur[1]:
                rl.append([])
            if cur[1]%2!=0:
                rl[cur[1]].insert(0,cur[0].val)#虽然这样看起来高大上，但其实时间复杂度高了一级。还不如调用reverse。
            else:
                rl[cur[1]].append(cur[0].val)
            if cur[0].left:
                queue.insert(0,(cur[0].left,cur[1]+1))
            if cur[0].right:
                queue.insert(0,(cur[0].right,cur[1]+1))
        return rl