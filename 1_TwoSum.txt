class Solution(object):
    def twoSum(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: List[int]
        """
        d = {}
        index = 0
        for num in nums:
            if target - num in d:
                return [d[target - num], index]
            else:
                d[num] = index
                index += 1

#这道题，核心思路是，先构建查找表dict(遍历nums，d[num]=index)，然后遍历nums，对于每个num，查找
#target-num是否在查找表中，如果存在，就直接找到了，否则继续。
#但是这样还是有个问题。假如nums中有两个2，target=4，那么我们要返回这两个2的索引。
#但是查找表中，对于同一个元素，只存储一个索引，之前的会被后面的覆盖。
#所以，我们需要一边构建查找表一边查找target-num是否存在于正在构建的查找表中。
#如果不存在，才能放心的把target:index加入查找表中。
#这样有另一个好处，就是可能还没将所有的元素都放入查找表，答案就已经找到了。